// Generated by Dagger (https://dagger.dev).
package com.example.portalcategory.di;

import com.example.portalcategory.data.repo.MainRepoImpl;
import com.example.portalcategory.data.repo.MainRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideApiHelperFactory implements Factory<MainRepository> {
  private final ApplicationModule module;

  private final Provider<MainRepoImpl> mainRepositoryProvider;

  public ApplicationModule_ProvideApiHelperFactory(ApplicationModule module,
      Provider<MainRepoImpl> mainRepositoryProvider) {
    this.module = module;
    this.mainRepositoryProvider = mainRepositoryProvider;
  }

  @Override
  public MainRepository get() {
    return provideApiHelper(module, mainRepositoryProvider.get());
  }

  public static ApplicationModule_ProvideApiHelperFactory create(ApplicationModule module,
      Provider<MainRepoImpl> mainRepositoryProvider) {
    return new ApplicationModule_ProvideApiHelperFactory(module, mainRepositoryProvider);
  }

  public static MainRepository provideApiHelper(ApplicationModule instance,
      MainRepoImpl mainRepository) {
    return Preconditions.checkNotNullFromProvides(instance.provideApiHelper(mainRepository));
  }
}
